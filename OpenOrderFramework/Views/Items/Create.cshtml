@model OpenOrderFramework.Models.Item
@using OpenOrderFramework.Extensions

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm("Create", "Items", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Item</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsVeg, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.IsVeg, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IsVeg, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CuisineId, "CuisineId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CuisineId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CuisineId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CategoryId, "CategoryId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ItemPictureUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ItemPictureUrl, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ItemPictureUrl, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="editor-label">
            Upload Image
        </div>
        <div class="editor-field">
            @Html.FileFor(model => model.File)
            @Html.ValidationMessageFor(model => model.File)
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Calories, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Calories, new { htmlAttributes = new { @class = "form-control" } })
                @*@Html.ValidationMessageFor(model => model.Calories, "", new { @class = "text-danger" })*@
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PreparationTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PreparationTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PreparationTime, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="row">
                <label class="col-md-2 control-label">Day(s) of Week</label>
                <div class="form-group">
                    @Html.LabelFor(model => model.Mon, new { htmlAttributes = new { @class = "col-md-1 checkbox-inline" } })
                    @Html.CheckBoxFor(model => model.Mon, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.LabelFor(model => model.Tue, new { htmlAttributes = new { @class = "col-md-1 checkbox-inline" } })
                    @Html.CheckBoxFor(model => model.Tue, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.LabelFor(model => model.Wed, new { htmlAttributes = new { @class = "col-md-1 checkbox-inline" } })
                    @Html.CheckBoxFor(model => model.Wed, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.LabelFor(model => model.Thu, new { htmlAttributes = new { @class = "col-md-1 checkbox-inline" } })
                    @Html.CheckBoxFor(model => model.Thu, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.LabelFor(model => model.Fri, new { htmlAttributes = new { @class = "col-md-1 checkbox-inline" } })
                    @Html.CheckBoxFor(model => model.Fri, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.LabelFor(model => model.Sat, new { htmlAttributes = new { @class = "col-md-1 checkbox-inline" } })
                    @Html.CheckBoxFor(model => model.Sat, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.LabelFor(model => model.Sun, new { htmlAttributes = new { @class = "col-md-1 checkbox-inline" } })
                    @Html.CheckBoxFor(model => model.Sun, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
